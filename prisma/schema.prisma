// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL_Three")
}

model User {
  id             Int            @id @default(autoincrement())
  username       String         @unique
  password       String?
  email          String         @unique
  emailVerified  Boolean?
  verificationToken String?     @unique
  tokenExpiry    DateTime?      // Token geçerlilik süresi
  isAdmin        Boolean        @default(false) // Yönetici rolü
  createdAt      DateTime       @default(now())
  updatedAt      DateTime       @updatedAt
  learnedWords   LearnedWord[]
  unlearnedWords UnlearnedWord[]
  dailyGoals     DailyGoal[]
}

model Word {
  id             Int            @id @default(autoincrement())
  english        String
  turkish        String
  week           Int
  addedBy        String        // Ekleyen admin kullanıcısı
  createdAt      DateTime       @default(now())
  learnedBy      LearnedWord[]
  unlearnedBy    UnlearnedWord[]
}

model UnlearnedWord {
  id        Int      @id @default(autoincrement())
  userId    Int
  wordId    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  word      Word     @relation(fields: [wordId], references: [id], onDelete: Cascade)

  @@unique([userId, wordId])
}

model LearnedWord {
  id        Int      @id @default(autoincrement())
  userId    Int
  wordId    Int
  isLearned Boolean  @default(true)
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  word      Word     @relation(fields: [wordId], references: [id], onDelete: Cascade)

  @@unique([userId, wordId])
}

model DailyGoal {
  id        Int      @id @default(autoincrement())
  userId    Int
  date      DateTime @default(now())
  completed Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, date])
}
